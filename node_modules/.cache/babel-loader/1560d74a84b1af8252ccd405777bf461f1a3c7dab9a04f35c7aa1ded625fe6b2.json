{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caioc\\\\Downloads\\\\AsaasFront\\\\src\\\\componentes\\\\payment\\\\payment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Check, Copy, AlertCircle } from 'lucide-react';\nimport { useNavigate } from \"react-router-dom\";\nimport QRCode from 'qrcode'; // Opcional, se o QR Code for gerado no frontend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Payment() {\n  _s();\n  const navigate = useNavigate();\n  const [copied, setCopied] = useState(false);\n  const [error, setError] = useState(null);\n  const [qrCode, setQrCode] = useState(null);\n  const [pixKey, setPixKey] = useState(null);\n  const [paymentStatus, setPaymentStatus] = useState(\"pending\");\n  useEffect(() => {\n    const fetchPixCode = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/generate-pix\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: \"Test User\",\n            email: \"test@example.com\",\n            phone: \"5511999999999\",\n            cpfCnpj: \"12345678900\",\n            value: \"1.00\",\n            dueDate: \"2025-01-20\",\n            description: \"Plano de Acompanhamento\"\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.error || \"Erro ao gerar Pix.\");\n        }\n        setQrCode(data.pixCode);\n        setPixKey(data.pixKey);\n      } catch (err) {\n        console.error(err.message);\n        setError(err.message);\n      }\n    };\n    fetchPixCode();\n  }, []);\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pixKey);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error(\"Erro ao copiar:\", err);\n      setError(\"Não foi possível copiar o código PIX\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center p-4 bg-gradient-to-r from-pink-400 via-purple-400 to-orange-400\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white/80 backdrop-blur-sm rounded-3xl shadow-lg p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center mb-6\",\n        children: \"Informa\\xE7\\xF5es do Pagamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [qrCode && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrCode,\n          alt: \"QR Code Pix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyToClipboard,\n          children: copied ? \"Copiado!\" : \"Copiar Chave Pix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"HH4vfg3/gAmEbSR2sE3U1grxqAw=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","Check","Copy","AlertCircle","useNavigate","QRCode","jsxDEV","_jsxDEV","Fragment","_Fragment","Payment","_s","navigate","copied","setCopied","error","setError","qrCode","setQrCode","pixKey","setPixKey","paymentStatus","setPaymentStatus","fetchPixCode","response","fetch","method","headers","body","JSON","stringify","name","email","phone","cpfCnpj","value","dueDate","description","data","json","ok","Error","pixCode","err","console","message","copyToClipboard","navigator","clipboard","writeText","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/caioc/Downloads/AsaasFront/src/componentes/payment/payment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Check, Copy, AlertCircle } from 'lucide-react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport QRCode from 'qrcode'; // Opcional, se o QR Code for gerado no frontend\r\n\r\nexport default function Payment() {\r\n  const navigate = useNavigate();\r\n  const [copied, setCopied] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [qrCode, setQrCode] = useState(null);\r\n  const [pixKey, setPixKey] = useState(null);\r\n  const [paymentStatus, setPaymentStatus] = useState(\"pending\");\r\n\r\n  useEffect(() => {\r\n    const fetchPixCode = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3001/generate-pix\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            name: \"Test User\",\r\n            email: \"test@example.com\",\r\n            phone: \"5511999999999\",\r\n            cpfCnpj: \"12345678900\",\r\n            value: \"1.00\",\r\n            dueDate: \"2025-01-20\",\r\n            description: \"Plano de Acompanhamento\",\r\n          }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.error || \"Erro ao gerar Pix.\");\r\n        }\r\n\r\n        setQrCode(data.pixCode);\r\n        setPixKey(data.pixKey);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchPixCode();\r\n  }, []);\r\n\r\n  const copyToClipboard = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(pixKey);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      console.error(\"Erro ao copiar:\", err);\r\n      setError(\"Não foi possível copiar o código PIX\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-r from-pink-400 via-purple-400 to-orange-400\">\r\n      <div className=\"w-full max-w-md bg-white/80 backdrop-blur-sm rounded-3xl shadow-lg p-8\">\r\n        <h2 className=\"text-2xl font-semibold text-center mb-6\">Informações do Pagamento</h2>\r\n\r\n        {error ? (\r\n          <p className=\"text-red-600\">{error}</p>\r\n        ) : (\r\n          <>\r\n            {qrCode && <img src={qrCode} alt=\"QR Code Pix\" />}\r\n            <button onClick={copyToClipboard}>\r\n              {copied ? \"Copiado!\" : \"Copiar Chave Pix\"}\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
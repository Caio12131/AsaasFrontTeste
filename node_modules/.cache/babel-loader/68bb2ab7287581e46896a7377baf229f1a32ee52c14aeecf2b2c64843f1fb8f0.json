{"ast":null,"code":"// Atualizado: app.js\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst http = require(\"http\");\nconst {\n  Server\n} = require(\"socket.io\");\nconst qrcode = require(\"qrcode\");\nrequire(\"dotenv\").config();\nconst app = express();\nconst server = http.createServer(app);\n\n// Configuração de CORS para ambiente local\napp.use(cors({\n  origin: \"http://localhost:3000\",\n  methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\n  allowedHeaders: [\"Content-Type\", \"Authorization\", \"access_token\"],\n  credentials: true\n}));\napp.use(express.json());\nconst ASAAS_API_KEY = process.env.ASAAS_API_KEY;\nconst ASAAS_API_URL = process.env.ASAAS_API_URL || \"https://www.asaas.com/api/v3\";\nif (!ASAAS_API_KEY) {\n  console.error(\"ASAAS_API_KEY is not set in the environment variables\");\n  process.exit(1);\n}\nconsole.log(\"Servidor rodando em localhost:5000\");\n\n// Rota para criar pagamentos com cliente genérico\napp.post(\"/payments\", async (req, res) => {\n  try {\n    const {\n      value,\n      dueDate,\n      description\n    } = req.body;\n    if (!value || !dueDate || !description) {\n      return res.status(400).json({\n        error: \"Missing required payment information\"\n      });\n    }\n\n    // Criar cliente genérico, se necessário\n    const customerResponse = await axios.post(`${ASAAS_API_URL}/customers`, {\n      name: \"Cliente Genérico\",\n      email: \"cliente.generico@exemplo.com\",\n      cpfCnpj: \"00000000000\"\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        access_token: ASAAS_API_KEY\n      }\n    });\n    const customerId = customerResponse.data.id;\n\n    // Dados do pagamento\n    const paymentData = {\n      customer: customerId,\n      billingType: \"PIX\",\n      value: Number(value).toFixed(2),\n      dueDate,\n      description,\n      postalService: false\n    };\n    const paymentResponse = await axios.post(`${ASAAS_API_URL}/payments`, paymentData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        access_token: ASAAS_API_KEY\n      }\n    });\n    if (paymentResponse.data.status === \"PENDING\") {\n      const pixResponse = await axios.get(`${ASAAS_API_URL}/payments/${paymentResponse.data.id}/pixQrCode`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          access_token: ASAAS_API_KEY\n        }\n      });\n      if (pixResponse.data.success && pixResponse.data.payload) {\n        const qrCodeImage = await qrcode.toDataURL(pixResponse.data.payload);\n        return res.status(200).json({\n          message: \"Pagamento PIX gerado com sucesso.\",\n          paymentId: paymentResponse.data.id,\n          value: paymentData.value,\n          dueDate: paymentData.dueDate,\n          description: paymentData.description,\n          pixQrCode: pixResponse.data.payload,\n          qrCodeImage,\n          invoiceUrl: paymentResponse.data.invoiceUrl\n        });\n      }\n    }\n    throw new Error(\"Falha ao gerar pagamento PIX\");\n  } catch (error) {\n    console.error(\"Erro ao criar pagamento:\", error.message);\n    res.status(500).json({\n      error: \"Erro ao gerar pagamento\",\n      details: error.message\n    });\n  }\n});\n\n// Inicialização do servidor\nconst PORT = 5000;\nserver.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","axios","http","Server","qrcode","config","app","server","createServer","use","origin","methods","allowedHeaders","credentials","json","ASAAS_API_KEY","process","env","ASAAS_API_URL","console","error","exit","log","post","req","res","value","dueDate","description","body","status","customerResponse","name","email","cpfCnpj","headers","access_token","customerId","data","id","paymentData","customer","billingType","Number","toFixed","postalService","paymentResponse","pixResponse","get","success","payload","qrCodeImage","toDataURL","message","paymentId","pixQrCode","invoiceUrl","Error","details","PORT","listen"],"sources":["C:/Users/caioc/Downloads/AsaasFront/src/componentes/payment/payment.jsx"],"sourcesContent":["// Atualizado: app.js\r\nconst express = require(\"express\")\r\nconst cors = require(\"cors\")\r\nconst axios = require(\"axios\")\r\nconst http = require(\"http\")\r\nconst { Server } = require(\"socket.io\")\r\nconst qrcode = require(\"qrcode\")\r\nrequire(\"dotenv\").config()\r\n\r\nconst app = express()\r\nconst server = http.createServer(app)\r\n\r\n// Configuração de CORS para ambiente local\r\napp.use(\r\n  cors({\r\n    origin: \"http://localhost:3000\",\r\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\r\n    allowedHeaders: [\"Content-Type\", \"Authorization\", \"access_token\"],\r\n    credentials: true,\r\n  })\r\n)\r\n\r\napp.use(express.json())\r\n\r\nconst ASAAS_API_KEY = process.env.ASAAS_API_KEY\r\nconst ASAAS_API_URL = process.env.ASAAS_API_URL || \"https://www.asaas.com/api/v3\"\r\n\r\nif (!ASAAS_API_KEY) {\r\n  console.error(\"ASAAS_API_KEY is not set in the environment variables\")\r\n  process.exit(1)\r\n}\r\n\r\nconsole.log(\"Servidor rodando em localhost:5000\")\r\n\r\n// Rota para criar pagamentos com cliente genérico\r\napp.post(\"/payments\", async (req, res) => {\r\n  try {\r\n    const { value, dueDate, description } = req.body\r\n\r\n    if (!value || !dueDate || !description) {\r\n      return res.status(400).json({ error: \"Missing required payment information\" })\r\n    }\r\n\r\n    // Criar cliente genérico, se necessário\r\n    const customerResponse = await axios.post(\r\n      `${ASAAS_API_URL}/customers`,\r\n      {\r\n        name: \"Cliente Genérico\",\r\n        email: \"cliente.generico@exemplo.com\",\r\n        cpfCnpj: \"00000000000\",\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          access_token: ASAAS_API_KEY,\r\n        },\r\n      }\r\n    )\r\n\r\n    const customerId = customerResponse.data.id\r\n\r\n    // Dados do pagamento\r\n    const paymentData = {\r\n      customer: customerId,\r\n      billingType: \"PIX\",\r\n      value: Number(value).toFixed(2),\r\n      dueDate,\r\n      description,\r\n      postalService: false,\r\n    }\r\n\r\n    const paymentResponse = await axios.post(`${ASAAS_API_URL}/payments`, paymentData, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        access_token: ASAAS_API_KEY,\r\n      },\r\n    })\r\n\r\n    if (paymentResponse.data.status === \"PENDING\") {\r\n      const pixResponse = await axios.get(`${ASAAS_API_URL}/payments/${paymentResponse.data.id}/pixQrCode`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          access_token: ASAAS_API_KEY,\r\n        },\r\n      })\r\n\r\n      if (pixResponse.data.success && pixResponse.data.payload) {\r\n        const qrCodeImage = await qrcode.toDataURL(pixResponse.data.payload)\r\n\r\n        return res.status(200).json({\r\n          message: \"Pagamento PIX gerado com sucesso.\",\r\n          paymentId: paymentResponse.data.id,\r\n          value: paymentData.value,\r\n          dueDate: paymentData.dueDate,\r\n          description: paymentData.description,\r\n          pixQrCode: pixResponse.data.payload,\r\n          qrCodeImage,\r\n          invoiceUrl: paymentResponse.data.invoiceUrl,\r\n        })\r\n      }\r\n    }\r\n\r\n    throw new Error(\"Falha ao gerar pagamento PIX\")\r\n  } catch (error) {\r\n    console.error(\"Erro ao criar pagamento:\", error.message)\r\n    res.status(500).json({ error: \"Erro ao gerar pagamento\", details: error.message })\r\n  }\r\n})\r\n\r\n// Inicialização do servidor\r\nconst PORT = 5000\r\nserver.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`)\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
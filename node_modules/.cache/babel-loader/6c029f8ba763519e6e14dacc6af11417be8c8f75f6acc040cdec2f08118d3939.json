{"ast":null,"code":"const express = require(\"express\");\nconst axios = require(\"axios\");\nconst cors = require(\"cors\");\nrequire(\"dotenv\").config();\nconst app = express();\nconst corsOptions = {\n  origin: ['http://localhost:3000', 'https://your-production-frontend-url.com'],\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  allowedHeaders: ['Content-Type', 'Authorization'],\n  credentials: true,\n  optionsSuccessStatus: 204\n};\napp.use(cors(corsOptions));\napp.use(express.json());\nconst ASAAS_API_KEY = process.env.ASAAS_API_KEY;\nconst ASAAS_API_URL = process.env.ASAAS_API_URL || \"https://sandbox.asaas.com/api/v3\";\nif (!ASAAS_API_KEY) {\n  console.error(\"ASAAS_API_KEY is not set in the environment variables\");\n  process.exit(1);\n}\nconsole.log(\"ASAAS_API_KEY:\", ASAAS_API_KEY ? \"is set (length: \" + ASAAS_API_KEY.length + \")\" : \"is not set\");\nconsole.log(\"ASAAS_API_URL:\", ASAAS_API_URL);\nasync function saveCustomerToDB(name, email) {\n  const id = Date.now();\n  return {\n    id,\n    name,\n    email\n  };\n}\napp.post('/customers', async (req, res) => {\n  try {\n    const {\n      name,\n      email\n    } = req.body;\n    if (!name || !email) {\n      return res.status(400).json({\n        error: 'Name and email are required.'\n      });\n    }\n    const newCustomer = await saveCustomerToDB(name, email);\n    res.status(201).json(newCustomer);\n  } catch (error) {\n    console.error(\"Error creating customer:\", error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n});\napp.post(\"/payments\", async (req, res) => {\n  try {\n    const {\n      customer,\n      value,\n      dueDate,\n      description,\n      paymentMethod\n    } = req.body;\n    console.log(\"Payment request data:\", {\n      customer,\n      value,\n      dueDate,\n      description,\n      paymentMethod\n    });\n    if (!customer || !value || !dueDate || !description || !paymentMethod) {\n      return res.status(400).json({\n        error: 'Missing required payment information'\n      });\n    }\n    const paymentData = {\n      customer,\n      billingType: paymentMethod,\n      value,\n      dueDate,\n      description\n    };\n    console.log(\"Sending payment request to Asaas:\", paymentData);\n    const response = await axios.post(`${ASAAS_API_URL}/payments`, paymentData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'access_token': ASAAS_API_KEY\n      }\n    });\n    console.log(\"Asaas API response:\", response.data);\n    res.status(201).json(response.data);\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error creating payment:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    if (error.response) {\n      console.error(\"Asaas API error response:\", error.response.data);\n      res.status(error.response.status).json({\n        error: error.response.data.error || \"Error creating payment\"\n      });\n    } else {\n      res.status(500).json({\n        error: \"Error creating payment\"\n      });\n    }\n  }\n});\napp.get(\"/check-api-key\", async (req, res) => {\n  try {\n    const response = await axios.get(`${ASAAS_API_URL}/customers`, {\n      headers: {\n        'access_token': ASAAS_API_KEY\n      }\n    });\n    res.json({\n      status: \"API key is valid\",\n      data: response.data\n    });\n  } catch (error) {\n    var _error$response2, _error$response3, _error$response4;\n    console.error(\"Error checking API key:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    res.status(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) || 500).json({\n      error: \"API key validation failed\",\n      details: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message\n    });\n  }\n});\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","axios","cors","config","app","corsOptions","origin","methods","allowedHeaders","credentials","optionsSuccessStatus","use","json","ASAAS_API_KEY","process","env","ASAAS_API_URL","console","error","exit","log","length","saveCustomerToDB","name","email","id","Date","now","post","req","res","body","status","newCustomer","customer","value","dueDate","description","paymentMethod","paymentData","billingType","response","headers","data","_error$response","message","get","_error$response2","_error$response3","_error$response4","details","PORT","listen"],"sources":["C:/Users/caioc/Downloads/AsaasFront/src/componentes/services/services.jsx"],"sourcesContent":["const express = require(\"express\");\r\nconst axios = require(\"axios\");\r\nconst cors = require(\"cors\");\r\nrequire(\"dotenv\").config();\r\n\r\nconst app = express();\r\n\r\nconst corsOptions = {\r\n  origin: ['http://localhost:3000', 'https://your-production-frontend-url.com'],\r\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\r\n  allowedHeaders: ['Content-Type', 'Authorization'],\r\n  credentials: true,\r\n  optionsSuccessStatus: 204\r\n};\r\n\r\napp.use(cors(corsOptions));\r\napp.use(express.json());\r\n\r\nconst ASAAS_API_KEY = process.env.ASAAS_API_KEY;\r\nconst ASAAS_API_URL = process.env.ASAAS_API_URL || \"https://sandbox.asaas.com/api/v3\";\r\n\r\nif (!ASAAS_API_KEY) {\r\n  console.error(\"ASAAS_API_KEY is not set in the environment variables\");\r\n  process.exit(1);\r\n}\r\n\r\nconsole.log(\"ASAAS_API_KEY:\", ASAAS_API_KEY ? \"is set (length: \" + ASAAS_API_KEY.length + \")\" : \"is not set\");\r\nconsole.log(\"ASAAS_API_URL:\", ASAAS_API_URL);\r\n\r\nasync function saveCustomerToDB(name, email) {\r\n  const id = Date.now();\r\n  return { id, name, email };\r\n}\r\n\r\napp.post('/customers', async (req, res) => {\r\n  try {\r\n    const { name, email } = req.body;\r\n    if (!name || !email) {\r\n      return res.status(400).json({ error: 'Name and email are required.' });\r\n    }\r\n\r\n    const newCustomer = await saveCustomerToDB(name, email);\r\n    res.status(201).json(newCustomer);\r\n  } catch (error) {\r\n    console.error(\"Error creating customer:\", error);\r\n    res.status(500).json({ error: 'Internal server error' });\r\n  }\r\n});\r\n\r\napp.post(\"/payments\", async (req, res) => {\r\n  try {\r\n    const { customer, value, dueDate, description, paymentMethod } = req.body;\r\n    console.log(\"Payment request data:\", { customer, value, dueDate, description, paymentMethod });\r\n\r\n    if (!customer || !value || !dueDate || !description || !paymentMethod) {\r\n      return res.status(400).json({ error: 'Missing required payment information' });\r\n    }\r\n\r\n    const paymentData = {\r\n      customer,\r\n      billingType: paymentMethod,\r\n      value,\r\n      dueDate,\r\n      description\r\n    };\r\n\r\n    console.log(\"Sending payment request to Asaas:\", paymentData);\r\n\r\n    const response = await axios.post(`${ASAAS_API_URL}/payments`, paymentData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'access_token': ASAAS_API_KEY\r\n      }\r\n    });\r\n\r\n    console.log(\"Asaas API response:\", response.data);\r\n    res.status(201).json(response.data);\r\n  } catch (error) {\r\n    console.error(\"Error creating payment:\", error.response?.data || error.message);\r\n    if (error.response) {\r\n      console.error(\"Asaas API error response:\", error.response.data);\r\n      res.status(error.response.status).json({ error: error.response.data.error || \"Error creating payment\" });\r\n    } else {\r\n      res.status(500).json({ error: \"Error creating payment\" });\r\n    }\r\n  }\r\n});\r\n\r\napp.get(\"/check-api-key\", async (req, res) => {\r\n  try {\r\n    const response = await axios.get(`${ASAAS_API_URL}/customers`, {\r\n      headers: {\r\n        'access_token': ASAAS_API_KEY\r\n      }\r\n    });\r\n    res.json({ status: \"API key is valid\", data: response.data });\r\n  } catch (error) {\r\n    console.error(\"Error checking API key:\", error.response?.data || error.message);\r\n    res.status(error.response?.status || 500).json({ \r\n      error: \"API key validation failed\", \r\n      details: error.response?.data || error.message \r\n    });\r\n  }\r\n});\r\n\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`);\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}